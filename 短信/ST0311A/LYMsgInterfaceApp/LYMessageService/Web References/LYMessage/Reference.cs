//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.34209
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.34209 版自动生成。
// 
#pragma warning disable 1591

namespace LYMessageService.LYMessage {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="SmsHttpBinding", Namespace="http://ws.app.com.cn")]
    public partial class Sms : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback CallSmsOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReplyOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReplyConfirmOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Sms() {
            this.Url = global::LYMessageService.Properties.Settings.Default.LYMessageService_LYMessage_Sms;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event CallSmsCompletedEventHandler CallSmsCompleted;
        
        /// <remarks/>
        public event ReportCompletedEventHandler ReportCompleted;
        
        /// <remarks/>
        public event ReplyCompletedEventHandler ReplyCompleted;
        
        /// <remarks/>
        public event ReplyConfirmCompletedEventHandler ReplyConfirmCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestElementName="Sms", RequestNamespace="http://ws.app.com.cn", ResponseElementName="SmsResponse", ResponseNamespace="http://ws.app.com.cn", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", IsNullable=true)]
        public string CallSms([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string spId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string loginName, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string password, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string content, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string mobiles, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string subPort, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string reserve, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string reserve1, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string reserve2) {
            object[] results = this.Invoke("CallSms", new object[] {
                        spId,
                        loginName,
                        password,
                        content,
                        mobiles,
                        subPort,
                        reserve,
                        reserve1,
                        reserve2});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CallSmsAsync(string spId, string loginName, string password, string content, string mobiles, string subPort, string reserve, string reserve1, string reserve2) {
            this.CallSmsAsync(spId, loginName, password, content, mobiles, subPort, reserve, reserve1, reserve2, null);
        }
        
        /// <remarks/>
        public void CallSmsAsync(string spId, string loginName, string password, string content, string mobiles, string subPort, string reserve, string reserve1, string reserve2, object userState) {
            if ((this.CallSmsOperationCompleted == null)) {
                this.CallSmsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCallSmsOperationCompleted);
            }
            this.InvokeAsync("CallSms", new object[] {
                        spId,
                        loginName,
                        password,
                        content,
                        mobiles,
                        subPort,
                        reserve,
                        reserve1,
                        reserve2}, this.CallSmsOperationCompleted, userState);
        }
        
        private void OnCallSmsOperationCompleted(object arg) {
            if ((this.CallSmsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CallSmsCompleted(this, new CallSmsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://ws.app.com.cn", ResponseNamespace="http://ws.app.com.cn", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", IsNullable=true)]
        public string Report([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string spId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string loginName, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string password) {
            object[] results = this.Invoke("Report", new object[] {
                        spId,
                        loginName,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ReportAsync(string spId, string loginName, string password) {
            this.ReportAsync(spId, loginName, password, null);
        }
        
        /// <remarks/>
        public void ReportAsync(string spId, string loginName, string password, object userState) {
            if ((this.ReportOperationCompleted == null)) {
                this.ReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReportOperationCompleted);
            }
            this.InvokeAsync("Report", new object[] {
                        spId,
                        loginName,
                        password}, this.ReportOperationCompleted, userState);
        }
        
        private void OnReportOperationCompleted(object arg) {
            if ((this.ReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReportCompleted(this, new ReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestElementName="ReplyRequest", RequestNamespace="http://ws.app.com.cn", ResponseNamespace="http://ws.app.com.cn", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("result", IsNullable=true)]
        public string Reply([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string spId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string loginName, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string password, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string reserve, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out string confirm_time, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out string id, [System.Xml.Serialization.XmlElementAttribute("replys", IsNullable=true)] out Reply[] replys) {
            object[] results = this.Invoke("Reply", new object[] {
                        spId,
                        loginName,
                        password,
                        reserve});
            confirm_time = ((string)(results[1]));
            id = ((string)(results[2]));
            replys = ((Reply[])(results[3]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ReplyAsync(string spId, string loginName, string password, string reserve) {
            this.ReplyAsync(spId, loginName, password, reserve, null);
        }
        
        /// <remarks/>
        public void ReplyAsync(string spId, string loginName, string password, string reserve, object userState) {
            if ((this.ReplyOperationCompleted == null)) {
                this.ReplyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReplyOperationCompleted);
            }
            this.InvokeAsync("Reply", new object[] {
                        spId,
                        loginName,
                        password,
                        reserve}, this.ReplyOperationCompleted, userState);
        }
        
        private void OnReplyOperationCompleted(object arg) {
            if ((this.ReplyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReplyCompleted(this, new ReplyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestElementName="ReplyConfirmRequest", RequestNamespace="http://ws.app.com.cn", ResponseNamespace="http://ws.app.com.cn", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("result", IsNullable=true)]
        public string ReplyConfirm([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string spId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string loginName, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string password, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string confir_time, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string id) {
            object[] results = this.Invoke("ReplyConfirm", new object[] {
                        spId,
                        loginName,
                        password,
                        confir_time,
                        id});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ReplyConfirmAsync(string spId, string loginName, string password, string confir_time, string id) {
            this.ReplyConfirmAsync(spId, loginName, password, confir_time, id, null);
        }
        
        /// <remarks/>
        public void ReplyConfirmAsync(string spId, string loginName, string password, string confir_time, string id, object userState) {
            if ((this.ReplyConfirmOperationCompleted == null)) {
                this.ReplyConfirmOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReplyConfirmOperationCompleted);
            }
            this.InvokeAsync("ReplyConfirm", new object[] {
                        spId,
                        loginName,
                        password,
                        confir_time,
                        id}, this.ReplyConfirmOperationCompleted, userState);
        }
        
        private void OnReplyConfirmOperationCompleted(object arg) {
            if ((this.ReplyConfirmCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReplyConfirmCompleted(this, new ReplyConfirmCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ws.app.com.cn")]
    public partial class Reply {
        
        private string callMdnField;
        
        private string mdnField;
        
        private string contentField;
        
        private string reply_timeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string callMdn {
            get {
                return this.callMdnField;
            }
            set {
                this.callMdnField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string mdn {
            get {
                return this.mdnField;
            }
            set {
                this.mdnField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string content {
            get {
                return this.contentField;
            }
            set {
                this.contentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string reply_time {
            get {
                return this.reply_timeField;
            }
            set {
                this.reply_timeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void CallSmsCompletedEventHandler(object sender, CallSmsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CallSmsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CallSmsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void ReportCompletedEventHandler(object sender, ReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void ReplyCompletedEventHandler(object sender, ReplyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReplyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReplyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string confirm_time {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string id {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public Reply[] replys {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Reply[])(this.results[3]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void ReplyConfirmCompletedEventHandler(object sender, ReplyConfirmCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReplyConfirmCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReplyConfirmCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591