/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package ep.org.clothingmaintenance.action;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.DispatchAction;

import ep.org.clothingmaintenance.bean.UserInfo;
import ep.org.clothingmaintenance.form.ShopLogisticsBillForm;
import ep.org.clothingmaintenance.service.CloMaintenanceService;

/** 
 * MyEclipse Struts
 * Creation date: 10-17-2011
 * 
 * XDoclet definition:
 * @struts.action path="/shopLogisticsBill" name="shopLogisticsBillForm" parameter="method" scope="request"
 * @struts.action-forward name="shopLogisticsBill" path="/colmaintenance/shopLogisticsBill.jsp"
 */
public class ShopLogisticsBillAction extends DispatchAction {
	public ActionForward getShopPrintData(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception{
		ShopLogisticsBillForm billform = (ShopLogisticsBillForm) form;
		CloMaintenanceService service = new CloMaintenanceService();

		UserInfo userInfo = (UserInfo) request.getSession().getAttribute("user_info");
		billform.setDpbm(request.getParameter("dpbm"));
		if(request.getParameter("dh")!=null && !request.getParameter("dh").equals("")){
			billform.setDh(request.getParameter("dh"));
		}else{
			billform.setDh(service.genarateDH(request.getParameter("dpbm"),userInfo));
		}
		
		if(request.getParameter("YSGS")!=null && !"".equals(request.getParameter("YSGS"))){
			billform.setYSGS(new String(request.getParameter("YSGS").getBytes("ISO-8859-1"),"UTF-8"));
		}
		
		billform.setYDH(request.getParameter("YDH"));
		billform.setGuid(request.getParameter("guid"));
		/*List transCoList  = new ArrayList();
		HashMap<String, String> transCo = null;
		
		transCo = new HashMap<String, String>();
		transCo.put("transCoCode", "");
		transCo.put("transCoName", "");
		transCoList.add(transCo);
		
		transCo = new HashMap<String, String>();
		transCo.put("transCoCode", "中通");
		transCo.put("transCoName", "中通");
		transCoList.add(transCo);
		
		transCo = new HashMap<String, String>();
		transCo.put("transCoCode", "韵达");
		transCo.put("transCoName", "韵达");
		transCoList.add(transCo);
		
		transCo = new HashMap<String, String>();
		transCo.put("transCoCode", "圆通");
		transCo.put("transCoName", "圆通");
		transCoList.add(transCo);
		
		transCo = new HashMap<String, String>();
		transCo.put("transCoCode", "天天");
		transCo.put("transCoName", "天天");
		transCoList.add(transCo);
		
		transCo = new HashMap<String, String>();
		transCo.put("transCoCode", "顺丰");
		transCo.put("transCoName", "顺丰");
		transCoList.add(transCo);
		
		transCo = new HashMap<String, String>();
		transCo.put("transCoCode", "速尔");
		transCo.put("transCoName", "速尔");
		transCoList.add(transCo);
		
		
		transCo = new HashMap<String, String>();
		transCo.put("transCoCode", "自送");
		transCo.put("transCoName", "自送");
		transCoList.add(transCo);
		
		transCo = new HashMap<String, String>();
		transCo.put("transCoCode", "韵达");
		transCo.put("transCoName", "韵达");
		transCoList.add(transCo);*/
		
		request.setAttribute("transCoList",service.getTransCos());
		
		return mapping.findForward("shopLogisticsBill");
	}

}