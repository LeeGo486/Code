/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package ep.org.clothingmaintenance.action;
  
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.DispatchAction; 


import ep.org.clothingmaintenance.bean.UserInfo;
import ep.org.clothingmaintenance.form.CloMaintenanceForm;
import ep.org.clothingmaintenance.service.CloMaintenanceService;
import ep.org.clothingmaintenance.service.UserService;


/** 
 * MyEclipse Struts
 * Creation date: 09-23-2011
 * 
 * XDoclet definition:
 * @struts.action path="/cloMaintenanceMain" name="cloMaintenanceForm" parameter="method" scope="request" validate="true"
 * @struts.action-forward name="cloMaintenanceMain" path="/colmaintenance/colmaintenancemain.jsp"
 */
public class CloMaintenanceMainAction extends DispatchAction {
	public ActionForward init(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception { 
			//String loginDeptID =request.getParameter("loginDeptID"); 
			CloMaintenanceForm customerAnalysisFrom = (CloMaintenanceForm) form;
			String userID = customerAnalysisFrom.getUserID();
			String pwd = customerAnalysisFrom.getPwd();
			//String pwd = (String)request.getSession().getAttribute("pwd");  
			String com = "";  
			if(pwd==null || pwd.equals("")){ 
				userID =request.getParameter("userID"); 
				pwd = request.getParameter("pwd");  
			} 
			//用户名认证，返回店铺编码等
			CloMaintenanceService service = new CloMaintenanceService();  
			String[] loginDept = service.checkUser(userID, pwd).split("_");   
			if(loginDept==null || loginDept.equals("")||loginDept.length<2){
				return mapping.findForward("loginWrong");
			}
			String sessionID = loginDept[0];
			String loginDeptID = loginDept[1];
			String userName = loginDept[2];
			//System.out.println("loginDeptID:"+loginDeptID);
			//根据店铺编码获取所属公司
			com = service.getComByDepot(loginDeptID);
			if(com==null || com.equals("")){
				return mapping.findForward("loginWrong");
			} 
			request.getSession().setAttribute("pwd", pwd);
			//设置用户信息
			UserInfo userInfo = new UserInfo();  
			userInfo.setUserID(userID);
			userInfo.setPwd(pwd);
			userInfo.setLoginDeptID(loginDeptID);
			userInfo.setUserName(userName);
			userInfo.setSessionID(sessionID);    
			userInfo.setCom(com);   
			userInfo.setDeptName("");
			request.getSession().setAttribute("user_info",userInfo );
			
			customerAnalysisFrom.setLoginDeptID(loginDeptID);
			customerAnalysisFrom.setUserID(userID);
			request.setAttribute("userID", customerAnalysisFrom.getUserID());
			request.setAttribute("loginDeptID", customerAnalysisFrom.getLoginDeptID());
			request.setAttribute("pwd", pwd);
			
			return mapping.findForward("cloMaintenanceMain");
	}
	
	public ActionForward query(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception {
		
			
			
			CloMaintenanceForm customerAnalysisFrom = (CloMaintenanceForm) form;
			
			request.setAttribute("userID", customerAnalysisFrom.getUserID());
			request.setAttribute("loginDeptID", customerAnalysisFrom.getLoginDeptID());
			
			return mapping.findForward("cloMaintenanceMain");
	}
	
	
	public ActionForward initListInfo(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		
		String loginDeptID =request.getParameter("loginDeptID"); 
		String userID =request.getParameter("userID"); 
		CloMaintenanceForm cloMaintenanceForm = (CloMaintenanceForm)form;
		cloMaintenanceForm.setLoginDeptID(loginDeptID);
		cloMaintenanceForm.setUserID(userID);
		
		return mapping.findForward("toListInfo");
	}
	
	public ActionForward sendToHQ(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception {
		
		CloMaintenanceForm cloMaintenanceForm = (CloMaintenanceForm)form;
		CloMaintenanceService service  = new CloMaintenanceService();
		UserInfo userInfo = (UserInfo) request.getSession().getAttribute("user_info");
		service.sendBilltoHQ(cloMaintenanceForm,userInfo);
		cloMaintenanceForm.setSendHQFlag("1");
		request.setAttribute("userID", cloMaintenanceForm.getUserID());
		request.setAttribute("loginDeptID", cloMaintenanceForm.getLoginDeptID());
		return mapping.findForward("cloMaintenanceMain");
	}
	
	public ActionForward deleteBill(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception{
		CloMaintenanceForm cloMaintenanceForm = (CloMaintenanceForm)form;
		CloMaintenanceService service  = new CloMaintenanceService();
		service.deleteBill(cloMaintenanceForm.getGuid());
		request.setAttribute("userID", cloMaintenanceForm.getUserID());
		request.setAttribute("loginDeptID", cloMaintenanceForm.getLoginDeptID());
		return mapping.findForward("cloMaintenanceMain");
		
	}
	
	public static String ascToString(String ascString){
		String[] s=ascString.split("-");
	    StringBuffer s1 = new StringBuffer(); 
	    for(int i=1;i<s.length;i++){
	        s1 = s1.append((char) Integer.decode("0x"+s[i]).intValue());
	       
	      }
	    return s1.toString();
	}
	
	 
}