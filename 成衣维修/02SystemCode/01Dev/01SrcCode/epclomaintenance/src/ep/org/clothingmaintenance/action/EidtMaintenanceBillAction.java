/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package ep.org.clothingmaintenance.action;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.DispatchAction;

import ep.org.clothingmaintenance.bean.MaintenanceBill;
import ep.org.clothingmaintenance.bean.UserInfo;
import ep.org.clothingmaintenance.form.EidtMaintenanceBillForm;
import ep.org.clothingmaintenance.service.CloMaintenanceService;
import ep.org.clothingmaintenance.util.DateUtil;

/** 
 * MyEclipse Struts
 * Creation date: 09-28-2011
 * 
 * XDoclet definition:
 * @struts.action path="/eidtMaintenanceBill" name="eidtMaintenanceBillForm" parameter="method" scope="request"
 * @struts.action-forward name="eidtMaintenanceBill" path="/colmaintenance/eidtMaintenanceBill.jsp"
 */
public class EidtMaintenanceBillAction extends DispatchAction {
	
	public ActionForward init(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception {
		
		CloMaintenanceService service = new CloMaintenanceService();
		String loginDeptID =request.getParameter("loginDeptID"); 
		String userID =request.getParameter("userID"); 
		EidtMaintenanceBillForm billForm = (EidtMaintenanceBillForm)form;
		billForm.setDpbm(loginDeptID);
		billForm.setIsSaveFlag("false");
		billForm.setGuid(service.genarateGuid());
		billForm.setLoginDeptID(loginDeptID);
		billForm.setUserID(userID);
		billForm.setGKWX("1");
		billForm.setTHRQ(DateUtil.getFormatDate("yyyy-MM-dd"));
		billForm.setDjsj(DateUtil.getFormatDate("yyyy-MM-dd HH:mm")); 
		UserInfo userInfo = (UserInfo)request.getSession().getAttribute("user_info"); 
		billForm.setDjr(userInfo.getUserName());
		
		List urgencyList = new ArrayList();
		HashMap<String, String> urgencyState = null;
		
		urgencyState = new HashMap<String, String>();
		
		urgencyState.put("stateCode", "");
		urgencyState.put("stateName", "");
		urgencyList.add(urgencyState);
		
		urgencyState = new HashMap<String, String>();
		
		urgencyState.put("stateCode", "01");
		urgencyState.put("stateName", "很急");
		urgencyList.add(urgencyState);
		
		urgencyState = new HashMap<String, String>();
		urgencyState.put("stateCode", "02");
		urgencyState.put("stateName", "急");
		urgencyList.add(urgencyState);
		
		urgencyState = new HashMap<String, String>();
		urgencyState.put("stateCode", "03");
		urgencyState.put("stateName", "一般");
		urgencyList.add(urgencyState);
		
		request.setAttribute("urgencyList",urgencyList);
		
		List transCoList  = new ArrayList();
		HashMap<String, String> transCo = null;
		
		
		/*transCo = new HashMap<String, String>();
		transCo.put("transCoCode", "");
		transCo.put("transCoName", "");
		transCoList.add(transCo);
		
		transCo = new HashMap<String, String>();
		transCo.put("transCoCode", "中通");
		transCo.put("transCoName", "中通");
		transCoList.add(transCo);
		
		transCo = new HashMap<String, String>();
		transCo.put("transCoCode", "韵达");
		transCo.put("transCoName", "韵达");
		transCoList.add(transCo);
		
		transCo = new HashMap<String, String>();
		transCo.put("transCoCode", "圆通");
		transCo.put("transCoName", "圆通");
		transCoList.add(transCo);
		
		transCo = new HashMap<String, String>();
		transCo.put("transCoCode", "天天");
		transCo.put("transCoName", "天天");
		transCoList.add(transCo);
		
		transCo = new HashMap<String, String>();
		transCo.put("transCoCode", "顺丰");
		transCo.put("transCoName", "顺丰");
		transCoList.add(transCo);
		
		transCo = new HashMap<String, String>();
		transCo.put("transCoCode", "速尔");
		transCo.put("transCoName", "速尔");
		transCoList.add(transCo);
		
		
		transCo = new HashMap<String, String>();
		transCo.put("transCoCode", "自送");
		transCo.put("transCoName", "自送");
		transCoList.add(transCo);
		
		transCo = new HashMap<String, String>();
		transCo.put("transCoCode", "韵达");
		transCo.put("transCoName", "韵达");
		transCoList.add(transCo);*/
		
		
		
		request.setAttribute("transCoList",service.getTransCos());
		
		return mapping.findForward("eidtMaintenanceBill");
	
		
	}
	
	public ActionForward showShopAll(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception{
		
		CloMaintenanceService service = new CloMaintenanceService();
		request.setAttribute("recordlist", service.getShopAllSelectData());
		
		return mapping.findForward("shopselect");
	}
	
	public ActionForward viewEditBill(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception{
		EidtMaintenanceBillForm billForm = (EidtMaintenanceBillForm) form;
		CloMaintenanceService service = new CloMaintenanceService();
		String loginDeptID =request.getParameter("loginDeptID"); 
		String userID =request.getParameter("userID");
		
		billForm.setIsSaveFlag("true");
		billForm.setLoginDeptID(loginDeptID);
		billForm.setUserID(userID);
		
		if(billForm.getTHRQ()==null || "".equals(billForm.getTHRQ())){
			billForm.setTHRQ(DateUtil.getFormatDate("yyyy-MM-dd HH:mm:ss"));
		}
		if(billForm.getDjsj()==null || "".equals(billForm.getDjsj())){
			billForm.setDjsj(DateUtil.getFormatDate("yyyy-MM-dd HH:mm:ss"));
		}
		billForm.setDjr(service.getUserName(userID));
		
		
		List urgencyList = new ArrayList();
		HashMap<String, String> urgencyState = null;
		
		urgencyState = new HashMap<String, String>();
		urgencyState.put("stateCode", "");
		urgencyState.put("stateName", "");
		urgencyList.add(urgencyState);
		
		urgencyState = new HashMap<String, String>();
		urgencyState.put("stateCode", "01");
		urgencyState.put("stateName", "很急");
		urgencyList.add(urgencyState);
		
		urgencyState = new HashMap<String, String>();
		urgencyState.put("stateCode", "02");
		urgencyState.put("stateName", "急");
		urgencyList.add(urgencyState);
		
		urgencyState = new HashMap<String, String>();
		urgencyState.put("stateCode", "03");
		urgencyState.put("stateName", "一般");
		urgencyList.add(urgencyState);
		
		request.setAttribute("urgencyList", urgencyList);
		
		/*List transCoList  = new ArrayList();
		HashMap<String, String> transCo = null;
		
		transCo = new HashMap<String, String>();
		transCo.put("transCoCode", "");
		transCo.put("transCoName", "");
		transCoList.add(transCo);
		
		transCo = new HashMap<String, String>();
		transCo.put("transCoCode", "中通");
		transCo.put("transCoName", "中通");
		transCoList.add(transCo);
		
		transCo = new HashMap<String, String>();
		transCo.put("transCoCode", "韵达");
		transCo.put("transCoName", "韵达");
		transCoList.add(transCo);
		
		transCo = new HashMap<String, String>();
		transCo.put("transCoCode", "圆通");
		transCo.put("transCoName", "圆通");
		transCoList.add(transCo);
		
		transCo = new HashMap<String, String>();
		transCo.put("transCoCode", "天天");
		transCo.put("transCoName", "天天");
		transCoList.add(transCo);
		
		transCo = new HashMap<String, String>();
		transCo.put("transCoCode", "顺丰");
		transCo.put("transCoName", "顺丰");
		transCoList.add(transCo);
		
		transCo = new HashMap<String, String>();
		transCo.put("transCoCode", "速尔");
		transCo.put("transCoName", "速尔");
		transCoList.add(transCo);
		
		
		transCo = new HashMap<String, String>();
		transCo.put("transCoCode", "自送");
		transCo.put("transCoName", "自送");
		transCoList.add(transCo);
		
		transCo = new HashMap<String, String>();
		transCo.put("transCoCode", "韵达");
		transCo.put("transCoName", "韵达");
		transCoList.add(transCo);*/
		
		request.setAttribute("transCoList",service.getTransCos());
		//billForm.setGuid(request.getParameter("guid"));
		MaintenanceBill bean = (MaintenanceBill) service.viewMaintenanceBillInfo(billForm.getGuid());
		billForm.setDh(bean.getDh());
		billForm.setDpbm(bean.getDpbm());
		billForm.setDpmc(bean.getDpmc());
		billForm.setDplx(bean.getDplx());
		billForm.setDZXM(bean.getDZXM());
		billForm.setDZLXDH(bean.getDZLXDH());
		billForm.setWXCBM(bean.getWXCBM());
		billForm.setWXCMC(bean.getWXCMC());
		billForm.setSLDG(bean.getSLDG());
		billForm.setDGLXDH(bean.getDGLXDH());
		billForm.setGKWX(bean.getGKWX());
		billForm.setSFTYFFWX(bean.getSFTYFFWX());
		billForm.setVIPKH(bean.getVIPKH());
		billForm.setGKXM(bean.getGKXM());
		billForm.setGKLXDH(bean.getGKLXDH());
		billForm.setSCSJ(bean.getSCSJ());
		billForm.setJJCD(bean.getJJCD());
		billForm.setKH(bean.getKH());
		billForm.setTHRQ(bean.getTHRQ());
		billForm.setWTMS(bean.getWTMS());
		billForm.setYSGS(bean.getYSGS());
		billForm.setYDH(bean.getYDH());
		billForm.setFHDZ(bean.getFHDZ());
		billForm.setSHDZ(bean.getSHDZ());
		billForm.setSHR(bean.getSHR());
		billForm.setSHRLXDH(bean.getSHRLXDH());
		billForm.setBZXX(bean.getBZXX());
		billForm.setWXXZ1(bean.getWXXZ1());
		billForm.setWTD1(bean.getWTD1());
		billForm.setQY1(bean.getQY1());
		billForm.setXXD1(bean.getXXD1());
		billForm.setWXXZ2(bean.getWXXZ2());
		billForm.setWTD2(bean.getWTD2());
		billForm.setQY2(bean.getQY2());
		billForm.setXXD2(bean.getXXD2());
		billForm.setPDCLFS(bean.getPDCLFS());
		billForm.setZRBM(bean.getZRBM());
		billForm.setTHDH(bean.getTHDH());
		billForm.setTCCLJG(bean.getTCCLJG());
		billForm.setJCYY(bean.getJCYY());
		billForm.setTX(bean.getTX());
		billForm.setSFSF(bean.getSFSF());
		billForm.setJHWXTS(bean.getJHWXTS());
		billForm.setSFJE(bean.getSFJE());
		billForm.setSFNR(bean.getSFNR());
		billForm.setPJPDBZ(bean.getPJPDBZ());
		billForm.setWXR(bean.getWXR());
		billForm.setWXSJ(bean.getWXSJ());
		billForm.setDjr(bean.getDjr());
		billForm.setDjsj(bean.getDjsj());
		billForm.setPJPDR(bean.getPJPDR());
		billForm.setPJPDSJ(bean.getPJPDSJ());
		billForm.setTTSPR(bean.getTTSPR());
		billForm.setTTSPSJ(bean.getTTSPSJ());
		billForm.setWXQRR(bean.getWXQRR());
		billForm.setWXQRSJ(bean.getWXQRSJ());
		billForm.setZT(bean.getZT());
		billForm.setYS(bean.getYS());
		billForm.setMS(bean.getMS());
		billForm.setSldgCode(bean.getSldgCode());
		billForm.setDpTypeName(bean.getDpTypeName());
		billForm.setDpTypeCode(bean.getDpTypeCode());
		billForm.setDPDQ(bean.getDPDQ());
		billForm.setPP(bean.getPP());
		billForm.setSLDGXM(bean.getSLDGXM());
		
		request.setAttribute("repairImageRecordList",service.getImageInfo(billForm.getGuid(), "待修图片"));
		request.setAttribute("checkImageRecordList", service.getImageInfo(billForm.getGuid(), "待检图片"));
		
		return mapping.findForward("eidtMaintenanceBill");
		
	}
	
	public ActionForward saveBill(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception{
		EidtMaintenanceBillForm billForm = (EidtMaintenanceBillForm) form;
		UserInfo userInfo = (UserInfo) request.getSession().getAttribute("user_info");
		if(!"1".equals(billForm.getGKWX())){
			billForm.setGKWX("0");
		}
		if(!"1".equals(billForm.getSFTYFFWX())){
			billForm.setSFTYFFWX("0");
		}
		
		CloMaintenanceService service = new CloMaintenanceService();
		System.out.print("------单号="+billForm.getDh());
		if(billForm.getDh()==null || billForm.getDh().equals("")){
			billForm.setDh(service.genarateDH(billForm.getDpbm(),userInfo));
		}
		System.out.print("------单号="+billForm.getDh());
		int rs = service.saveBill(billForm,userInfo);
		billForm.setSaveState(Integer.toString(rs));
		
		
		viewEditBill(mapping, billForm, request, response);
		request.setAttribute("repairImageRecordList",service.getImageInfo(billForm.getGuid(), "待修图片"));
		request.setAttribute("checkImageRecordList", service.getImageInfo(billForm.getGuid(), "待检图片"));
		return mapping.findForward("eidtMaintenanceBill");
	}
	
	public ActionForward upload(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception{
		
		EidtMaintenanceBillForm billForm = (EidtMaintenanceBillForm) form;
		CloMaintenanceService service = new CloMaintenanceService();
		service.saveBillPictrue(billForm);
		viewEditBill(mapping, billForm, request, response);
		return mapping.findForward("eidtMaintenanceBill");
	}

	public ActionForward deletePicture(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)throws Exception {
		EidtMaintenanceBillForm billForm = (EidtMaintenanceBillForm) form;
		CloMaintenanceService service = new CloMaintenanceService();
		service.deletePicture(billForm);
		viewEditBill(mapping, billForm, request, response);
		return mapping.findForward("eidtMaintenanceBill");
		
	}

	
}