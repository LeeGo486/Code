/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package ep.org.clothingmaintenance.action;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.DispatchAction;

import ep.org.clothingmaintenance.bean.UserInfo;
import ep.org.clothingmaintenance.form.MaintenanceInfoListForm;
import ep.org.clothingmaintenance.service.CloMaintenanceService;


/** 
 * MyEclipse Struts
 * Creation date: 09-27-2011
 * 
 * XDoclet definition:
 * @struts.action path="/maintenanceInfoList" name="maintenanceInfoListForm" parameter="method" scope="request"
 * @struts.action-forward name="tomaintenanceInfoList" path="/colmaintenance/maintenanceInfoList.jsp"
 */
public class MaintenanceInfoListAction extends DispatchAction {
	
	
	public ActionForward init(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		
		String loginDeptID =request.getParameter("loginDeptID"); 
		String userID =request.getParameter("userID"); 
		MaintenanceInfoListForm listForm = (MaintenanceInfoListForm)form;
		if(listForm.getLoginDeptID() == null || "".equals(loginDeptID))
		{
			listForm.setLoginDeptID(loginDeptID);
		}
		listForm.setUserID(userID);
		
		//订单状态下拉列表框初始化
		List billStateList = new ArrayList();
		HashMap<String, String> billState = null;
		
		billState = new HashMap<String, String>();
		billState.put("stateCode", "");
		billState.put("stateName", "全部");
		billStateList.add(billState);
		
		billState = new HashMap<String, String>();
		billState.put("stateCode", "0");
		billState.put("stateName", "登记");
		billStateList.add(billState);
		
		billState = new HashMap<String, String>();
		billState.put("stateCode", "1");
		billState.put("stateName", "已发总部");
		billStateList.add(billState);
		
		billState = new HashMap<String, String>();
		billState.put("stateCode", "2");
		billState.put("stateName", "总部已收货");
		billStateList.add(billState);
		
		billState = new HashMap<String, String>();
		billState.put("stateCode", "3");
		billState.put("stateName", "产品退仓");
		billStateList.add(billState);
		
		billState = new HashMap<String, String>();
		billState.put("stateCode", "4");
		billState.put("stateName", "不可维修待退店铺");
		billStateList.add(billState);
		
		billState = new HashMap<String, String>();
		billState.put("stateCode", "5");
		billState.put("stateName", "维修中");
		billStateList.add(billState);
		
		billState = new HashMap<String, String>();
		billState.put("stateCode", "6");
		billState.put("stateName", "特修已确认");
		billStateList.add(billState);
		
		billState = new HashMap<String, String>();
		billState.put("stateCode", "7");
		billState.put("stateName", "维修完成");
		billStateList.add(billState);
		
		billState = new HashMap<String, String>();
		billState.put("stateCode", "8");
		billState.put("stateName", "总部已发货");
		billStateList.add(billState);
		
		billState = new HashMap<String, String>();
		billState.put("stateCode", "9");
		billState.put("stateName", "店铺已收货");
		billStateList.add(billState);
		
		billState = new HashMap<String, String>();
		billState.put("stateCode", "10");
		billState.put("stateName", "顾客已收货");
		billStateList.add(billState);
		
		billState = new HashMap<String, String>();
		billState.put("stateCode", "11");
		billState.put("stateName", "特退申请");
		billStateList.add(billState);
		
		billState = new HashMap<String, String>();
		billState.put("stateCode", "12");
		billState.put("stateName", "特退确认");
		billStateList.add(billState);
		request.setAttribute("billStateList", billStateList);
		
		
		
		
		//初始化店铺类类型
		List shopTypeList = new ArrayList();
		HashMap<String, String> shopType = null;
		
		shopType = new HashMap<String, String>();
		shopType.put("shopTypeCode", "");
		shopType.put("shopTypeName", "全部");
		shopTypeList.add(shopType);
		
		shopType = new HashMap<String, String>();
		shopType.put("shopTypeCode", "1");
		shopType.put("shopTypeName", "自营");
		shopTypeList.add(shopType);
		
		shopType = new HashMap<String, String>();
		shopType.put("shopTypeCode", "2");
		shopType.put("shopTypeName", "加盟");
		shopTypeList.add(shopType);
		
		request.setAttribute("shopTypeList", shopTypeList);
		
		//操作类型下拉列表初始化
		List operateList = new ArrayList();
		HashMap<String, String> operateMap = null;
		
		operateMap = new HashMap<String, String>();
		operateMap.put("stateCode", "");
		operateMap.put("stateName", "全部");
		operateList.add(operateMap);
		
		operateMap = new HashMap<String, String>();
		operateMap.put("stateCode", "0");
		operateMap.put("stateName", "登记");
		operateList.add(operateMap);
		
		operateMap = new HashMap<String, String>();
		operateMap.put("stateCode", "1");
		operateMap.put("stateName", "已发总部");
		operateList.add(operateMap);
		
		operateMap = new HashMap<String, String>();
		operateMap.put("stateCode", "2");
		operateMap.put("stateName", "总部已收货");
		operateList.add(operateMap);
		
		operateMap = new HashMap<String, String>();
		operateMap.put("stateCode", "3");
		operateMap.put("stateName", "产品退仓");
		operateList.add(operateMap);
		
		operateMap = new HashMap<String, String>();
		operateMap.put("stateCode", "4");
		operateMap.put("stateName", "不可维修待退店铺");
		operateList.add(operateMap);
		
		operateMap = new HashMap<String, String>();
		operateMap.put("stateCode", "5");
		operateMap.put("stateName", "维修中");
		operateList.add(operateMap);
		
		operateMap = new HashMap<String, String>();
		operateMap.put("stateCode", "6");
		operateMap.put("stateName", "特修已确认");
		operateList.add(operateMap);
		
		operateMap = new HashMap<String, String>();
		operateMap.put("stateCode", "7");
		operateMap.put("stateName", "维修完成");
		operateList.add(operateMap);
		
		operateMap = new HashMap<String, String>();
		operateMap.put("stateCode", "8");
		operateMap.put("stateName", "总部已发货");
		operateList.add(operateMap);
		
		operateMap = new HashMap<String, String>();
		operateMap.put("stateCode", "9");
		operateMap.put("stateName", "店铺已收货");
		operateList.add(operateMap);
		
		operateMap = new HashMap<String, String>();
		operateMap.put("stateCode", "10");
		operateMap.put("stateName", "顾客已收货");
		operateList.add(operateMap);
		
		operateMap = new HashMap<String, String>();
		operateMap.put("stateCode", "11");
		operateMap.put("stateName", "特退申请");
		operateList.add(operateMap);
		
		operateMap = new HashMap<String, String>();
		operateMap.put("stateCode", "12");
		operateMap.put("stateName", "特退确认");
		operateList.add(operateMap);
		request.setAttribute("operateList", operateList);
		
		return mapping.findForward("tomaintenanceInfoList");
	}

	public ActionForward queryList(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception{
		MaintenanceInfoListForm listForm = (MaintenanceInfoListForm)form;
		UserInfo userInfo = (UserInfo) request.getSession().getAttribute("user_info");
		CloMaintenanceService service = new CloMaintenanceService();
		
		request.setAttribute("recordlist", service.queryList(listForm,userInfo));
		init(mapping, listForm, request, response);
		
		
		
		
	
		return mapping.findForward("tomaintenanceInfoList");
	}
}