//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.34209
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.34209 版自动生成。
// 
#pragma warning disable 1591

namespace SendMsgService.Dxt {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="LinkWSSoap", Namespace="http://tempuri.org/")]
    public partial class LinkWS : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback HelloWorldOperationCompleted;
        
        private System.Threading.SendOrPostCallback BatchSendOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetReportFailOperationCompleted;
        
        private System.Threading.SendOrPostCallback RegOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdPwdOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdRegOperationCompleted;
        
        private System.Threading.SendOrPostCallback SelSumOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOperationCompleted;
        
        private System.Threading.SendOrPostCallback UnRegOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChargeUpOperationCompleted;
        
        private System.Threading.SendOrPostCallback AgentChangeAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback BalanceMMSOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendMMSOperationCompleted;
        
        private System.Threading.SendOrPostCallback BatchSendMMSOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetReportFailMMSOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMMSOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChargeUpMMSOperationCompleted;
        
        private System.Threading.SendOrPostCallback AgentMakeAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetReportSMSOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetReportMMSOperationCompleted;
        
        private System.Threading.SendOrPostCallback Send2OperationCompleted;
        
        private System.Threading.SendOrPostCallback SendMMS2OperationCompleted;
        
        private System.Threading.SendOrPostCallback BatchSend2OperationCompleted;
        
        private System.Threading.SendOrPostCallback BatchSendMMS2OperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public LinkWS() {
            this.Url = global::SendMsgService.Properties.Settings.Default.SendMsgService1_Dxt_LinkWS;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event HelloWorldCompletedEventHandler HelloWorldCompleted;
        
        /// <remarks/>
        public event BatchSendCompletedEventHandler BatchSendCompleted;
        
        /// <remarks/>
        public event GetReportFailCompletedEventHandler GetReportFailCompleted;
        
        /// <remarks/>
        public event RegCompletedEventHandler RegCompleted;
        
        /// <remarks/>
        public event UpdPwdCompletedEventHandler UpdPwdCompleted;
        
        /// <remarks/>
        public event UpdRegCompletedEventHandler UpdRegCompleted;
        
        /// <remarks/>
        public event SelSumCompletedEventHandler SelSumCompleted;
        
        /// <remarks/>
        public event SendCompletedEventHandler SendCompleted;
        
        /// <remarks/>
        public event GetCompletedEventHandler GetCompleted;
        
        /// <remarks/>
        public event UnRegCompletedEventHandler UnRegCompleted;
        
        /// <remarks/>
        public event ChargeUpCompletedEventHandler ChargeUpCompleted;
        
        /// <remarks/>
        public event AgentChangeAccountCompletedEventHandler AgentChangeAccountCompleted;
        
        /// <remarks/>
        public event BalanceMMSCompletedEventHandler BalanceMMSCompleted;
        
        /// <remarks/>
        public event SendMMSCompletedEventHandler SendMMSCompleted;
        
        /// <remarks/>
        public event BatchSendMMSCompletedEventHandler BatchSendMMSCompleted;
        
        /// <remarks/>
        public event GetReportFailMMSCompletedEventHandler GetReportFailMMSCompleted;
        
        /// <remarks/>
        public event GetMMSCompletedEventHandler GetMMSCompleted;
        
        /// <remarks/>
        public event ChargeUpMMSCompletedEventHandler ChargeUpMMSCompleted;
        
        /// <remarks/>
        public event AgentMakeAccountCompletedEventHandler AgentMakeAccountCompleted;
        
        /// <remarks/>
        public event GetReportSMSCompletedEventHandler GetReportSMSCompleted;
        
        /// <remarks/>
        public event GetReportMMSCompletedEventHandler GetReportMMSCompleted;
        
        /// <remarks/>
        public event Send2CompletedEventHandler Send2Completed;
        
        /// <remarks/>
        public event SendMMS2CompletedEventHandler SendMMS2Completed;
        
        /// <remarks/>
        public event BatchSend2CompletedEventHandler BatchSend2Completed;
        
        /// <remarks/>
        public event BatchSendMMS2CompletedEventHandler BatchSendMMS2Completed;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/HelloWorld", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string HelloWorld() {
            object[] results = this.Invoke("HelloWorld", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void HelloWorldAsync() {
            this.HelloWorldAsync(null);
        }
        
        /// <remarks/>
        public void HelloWorldAsync(object userState) {
            if ((this.HelloWorldOperationCompleted == null)) {
                this.HelloWorldOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHelloWorldOperationCompleted);
            }
            this.InvokeAsync("HelloWorld", new object[0], this.HelloWorldOperationCompleted, userState);
        }
        
        private void OnHelloWorldOperationCompleted(object arg) {
            if ((this.HelloWorldCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HelloWorldCompleted(this, new HelloWorldCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/BatchSend", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int BatchSend(string CorpID, string Pwd, string Mobile, string Content, string Cell, string SendTime) {
            object[] results = this.Invoke("BatchSend", new object[] {
                        CorpID,
                        Pwd,
                        Mobile,
                        Content,
                        Cell,
                        SendTime});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void BatchSendAsync(string CorpID, string Pwd, string Mobile, string Content, string Cell, string SendTime) {
            this.BatchSendAsync(CorpID, Pwd, Mobile, Content, Cell, SendTime, null);
        }
        
        /// <remarks/>
        public void BatchSendAsync(string CorpID, string Pwd, string Mobile, string Content, string Cell, string SendTime, object userState) {
            if ((this.BatchSendOperationCompleted == null)) {
                this.BatchSendOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBatchSendOperationCompleted);
            }
            this.InvokeAsync("BatchSend", new object[] {
                        CorpID,
                        Pwd,
                        Mobile,
                        Content,
                        Cell,
                        SendTime}, this.BatchSendOperationCompleted, userState);
        }
        
        private void OnBatchSendOperationCompleted(object arg) {
            if ((this.BatchSendCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BatchSendCompleted(this, new BatchSendCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetReportFail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetReportFail(string CorpID, string Pwd, string cell) {
            object[] results = this.Invoke("GetReportFail", new object[] {
                        CorpID,
                        Pwd,
                        cell});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetReportFailAsync(string CorpID, string Pwd, string cell) {
            this.GetReportFailAsync(CorpID, Pwd, cell, null);
        }
        
        /// <remarks/>
        public void GetReportFailAsync(string CorpID, string Pwd, string cell, object userState) {
            if ((this.GetReportFailOperationCompleted == null)) {
                this.GetReportFailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetReportFailOperationCompleted);
            }
            this.InvokeAsync("GetReportFail", new object[] {
                        CorpID,
                        Pwd,
                        cell}, this.GetReportFailOperationCompleted, userState);
        }
        
        private void OnGetReportFailOperationCompleted(object arg) {
            if ((this.GetReportFailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetReportFailCompleted(this, new GetReportFailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Reg", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int Reg(string CorpID, string Pwd, string CorpName, string LinkMan, string Tel, string Mobile, string Email, string Memo) {
            object[] results = this.Invoke("Reg", new object[] {
                        CorpID,
                        Pwd,
                        CorpName,
                        LinkMan,
                        Tel,
                        Mobile,
                        Email,
                        Memo});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void RegAsync(string CorpID, string Pwd, string CorpName, string LinkMan, string Tel, string Mobile, string Email, string Memo) {
            this.RegAsync(CorpID, Pwd, CorpName, LinkMan, Tel, Mobile, Email, Memo, null);
        }
        
        /// <remarks/>
        public void RegAsync(string CorpID, string Pwd, string CorpName, string LinkMan, string Tel, string Mobile, string Email, string Memo, object userState) {
            if ((this.RegOperationCompleted == null)) {
                this.RegOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRegOperationCompleted);
            }
            this.InvokeAsync("Reg", new object[] {
                        CorpID,
                        Pwd,
                        CorpName,
                        LinkMan,
                        Tel,
                        Mobile,
                        Email,
                        Memo}, this.RegOperationCompleted, userState);
        }
        
        private void OnRegOperationCompleted(object arg) {
            if ((this.RegCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RegCompleted(this, new RegCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdPwd", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdPwd(string CorpID, string Pwd, string NewPwd) {
            object[] results = this.Invoke("UpdPwd", new object[] {
                        CorpID,
                        Pwd,
                        NewPwd});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdPwdAsync(string CorpID, string Pwd, string NewPwd) {
            this.UpdPwdAsync(CorpID, Pwd, NewPwd, null);
        }
        
        /// <remarks/>
        public void UpdPwdAsync(string CorpID, string Pwd, string NewPwd, object userState) {
            if ((this.UpdPwdOperationCompleted == null)) {
                this.UpdPwdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdPwdOperationCompleted);
            }
            this.InvokeAsync("UpdPwd", new object[] {
                        CorpID,
                        Pwd,
                        NewPwd}, this.UpdPwdOperationCompleted, userState);
        }
        
        private void OnUpdPwdOperationCompleted(object arg) {
            if ((this.UpdPwdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdPwdCompleted(this, new UpdPwdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdReg", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdReg(string CorpID, string Pwd, string CorpName, string LinkMan, string Tel, string Mobile, string Email, string Memo) {
            object[] results = this.Invoke("UpdReg", new object[] {
                        CorpID,
                        Pwd,
                        CorpName,
                        LinkMan,
                        Tel,
                        Mobile,
                        Email,
                        Memo});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdRegAsync(string CorpID, string Pwd, string CorpName, string LinkMan, string Tel, string Mobile, string Email, string Memo) {
            this.UpdRegAsync(CorpID, Pwd, CorpName, LinkMan, Tel, Mobile, Email, Memo, null);
        }
        
        /// <remarks/>
        public void UpdRegAsync(string CorpID, string Pwd, string CorpName, string LinkMan, string Tel, string Mobile, string Email, string Memo, object userState) {
            if ((this.UpdRegOperationCompleted == null)) {
                this.UpdRegOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdRegOperationCompleted);
            }
            this.InvokeAsync("UpdReg", new object[] {
                        CorpID,
                        Pwd,
                        CorpName,
                        LinkMan,
                        Tel,
                        Mobile,
                        Email,
                        Memo}, this.UpdRegOperationCompleted, userState);
        }
        
        private void OnUpdRegOperationCompleted(object arg) {
            if ((this.UpdRegCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdRegCompleted(this, new UpdRegCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SelSum", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SelSum(string CorpID, string Pwd) {
            object[] results = this.Invoke("SelSum", new object[] {
                        CorpID,
                        Pwd});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SelSumAsync(string CorpID, string Pwd) {
            this.SelSumAsync(CorpID, Pwd, null);
        }
        
        /// <remarks/>
        public void SelSumAsync(string CorpID, string Pwd, object userState) {
            if ((this.SelSumOperationCompleted == null)) {
                this.SelSumOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSelSumOperationCompleted);
            }
            this.InvokeAsync("SelSum", new object[] {
                        CorpID,
                        Pwd}, this.SelSumOperationCompleted, userState);
        }
        
        private void OnSelSumOperationCompleted(object arg) {
            if ((this.SelSumCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SelSumCompleted(this, new SelSumCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Send", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int Send(string CorpID, string Pwd, string Mobile, string Content, string Cell, string SendTime) {
            object[] results = this.Invoke("Send", new object[] {
                        CorpID,
                        Pwd,
                        Mobile,
                        Content,
                        Cell,
                        SendTime});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SendAsync(string CorpID, string Pwd, string Mobile, string Content, string Cell, string SendTime) {
            this.SendAsync(CorpID, Pwd, Mobile, Content, Cell, SendTime, null);
        }
        
        /// <remarks/>
        public void SendAsync(string CorpID, string Pwd, string Mobile, string Content, string Cell, string SendTime, object userState) {
            if ((this.SendOperationCompleted == null)) {
                this.SendOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendOperationCompleted);
            }
            this.InvokeAsync("Send", new object[] {
                        CorpID,
                        Pwd,
                        Mobile,
                        Content,
                        Cell,
                        SendTime}, this.SendOperationCompleted, userState);
        }
        
        private void OnSendOperationCompleted(object arg) {
            if ((this.SendCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendCompleted(this, new SendCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Get(string CorpID, string Pwd) {
            object[] results = this.Invoke("Get", new object[] {
                        CorpID,
                        Pwd});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAsync(string CorpID, string Pwd) {
            this.GetAsync(CorpID, Pwd, null);
        }
        
        /// <remarks/>
        public void GetAsync(string CorpID, string Pwd, object userState) {
            if ((this.GetOperationCompleted == null)) {
                this.GetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOperationCompleted);
            }
            this.InvokeAsync("Get", new object[] {
                        CorpID,
                        Pwd}, this.GetOperationCompleted, userState);
        }
        
        private void OnGetOperationCompleted(object arg) {
            if ((this.GetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCompleted(this, new GetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UnReg", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UnReg(string CorpID, string Pwd) {
            object[] results = this.Invoke("UnReg", new object[] {
                        CorpID,
                        Pwd});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UnRegAsync(string CorpID, string Pwd) {
            this.UnRegAsync(CorpID, Pwd, null);
        }
        
        /// <remarks/>
        public void UnRegAsync(string CorpID, string Pwd, object userState) {
            if ((this.UnRegOperationCompleted == null)) {
                this.UnRegOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUnRegOperationCompleted);
            }
            this.InvokeAsync("UnReg", new object[] {
                        CorpID,
                        Pwd}, this.UnRegOperationCompleted, userState);
        }
        
        private void OnUnRegOperationCompleted(object arg) {
            if ((this.UnRegCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UnRegCompleted(this, new UnRegCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ChargeUp", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ChargeUp(string CorpID, string Pwd, string CardNo, string CardPwd) {
            object[] results = this.Invoke("ChargeUp", new object[] {
                        CorpID,
                        Pwd,
                        CardNo,
                        CardPwd});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ChargeUpAsync(string CorpID, string Pwd, string CardNo, string CardPwd) {
            this.ChargeUpAsync(CorpID, Pwd, CardNo, CardPwd, null);
        }
        
        /// <remarks/>
        public void ChargeUpAsync(string CorpID, string Pwd, string CardNo, string CardPwd, object userState) {
            if ((this.ChargeUpOperationCompleted == null)) {
                this.ChargeUpOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChargeUpOperationCompleted);
            }
            this.InvokeAsync("ChargeUp", new object[] {
                        CorpID,
                        Pwd,
                        CardNo,
                        CardPwd}, this.ChargeUpOperationCompleted, userState);
        }
        
        private void OnChargeUpOperationCompleted(object arg) {
            if ((this.ChargeUpCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChargeUpCompleted(this, new ChargeUpCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AgentChangeAccount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AgentChangeAccount(string LoginName, string LoginPwd, string CorpID, int SmsBalance, int MmsBalance) {
            object[] results = this.Invoke("AgentChangeAccount", new object[] {
                        LoginName,
                        LoginPwd,
                        CorpID,
                        SmsBalance,
                        MmsBalance});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AgentChangeAccountAsync(string LoginName, string LoginPwd, string CorpID, int SmsBalance, int MmsBalance) {
            this.AgentChangeAccountAsync(LoginName, LoginPwd, CorpID, SmsBalance, MmsBalance, null);
        }
        
        /// <remarks/>
        public void AgentChangeAccountAsync(string LoginName, string LoginPwd, string CorpID, int SmsBalance, int MmsBalance, object userState) {
            if ((this.AgentChangeAccountOperationCompleted == null)) {
                this.AgentChangeAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAgentChangeAccountOperationCompleted);
            }
            this.InvokeAsync("AgentChangeAccount", new object[] {
                        LoginName,
                        LoginPwd,
                        CorpID,
                        SmsBalance,
                        MmsBalance}, this.AgentChangeAccountOperationCompleted, userState);
        }
        
        private void OnAgentChangeAccountOperationCompleted(object arg) {
            if ((this.AgentChangeAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AgentChangeAccountCompleted(this, new AgentChangeAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/BalanceMMS", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string BalanceMMS(string CorpID, string Pwd) {
            object[] results = this.Invoke("BalanceMMS", new object[] {
                        CorpID,
                        Pwd});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void BalanceMMSAsync(string CorpID, string Pwd) {
            this.BalanceMMSAsync(CorpID, Pwd, null);
        }
        
        /// <remarks/>
        public void BalanceMMSAsync(string CorpID, string Pwd, object userState) {
            if ((this.BalanceMMSOperationCompleted == null)) {
                this.BalanceMMSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBalanceMMSOperationCompleted);
            }
            this.InvokeAsync("BalanceMMS", new object[] {
                        CorpID,
                        Pwd}, this.BalanceMMSOperationCompleted, userState);
        }
        
        private void OnBalanceMMSOperationCompleted(object arg) {
            if ((this.BalanceMMSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BalanceMMSCompleted(this, new BalanceMMSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendMMS", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SendMMS(string CorpID, string Pwd, string Mobile, string Base64Content, string Title, string ExtCode, string SendTime) {
            object[] results = this.Invoke("SendMMS", new object[] {
                        CorpID,
                        Pwd,
                        Mobile,
                        Base64Content,
                        Title,
                        ExtCode,
                        SendTime});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendMMSAsync(string CorpID, string Pwd, string Mobile, string Base64Content, string Title, string ExtCode, string SendTime) {
            this.SendMMSAsync(CorpID, Pwd, Mobile, Base64Content, Title, ExtCode, SendTime, null);
        }
        
        /// <remarks/>
        public void SendMMSAsync(string CorpID, string Pwd, string Mobile, string Base64Content, string Title, string ExtCode, string SendTime, object userState) {
            if ((this.SendMMSOperationCompleted == null)) {
                this.SendMMSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendMMSOperationCompleted);
            }
            this.InvokeAsync("SendMMS", new object[] {
                        CorpID,
                        Pwd,
                        Mobile,
                        Base64Content,
                        Title,
                        ExtCode,
                        SendTime}, this.SendMMSOperationCompleted, userState);
        }
        
        private void OnSendMMSOperationCompleted(object arg) {
            if ((this.SendMMSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendMMSCompleted(this, new SendMMSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/BatchSendMMS", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string BatchSendMMS(string CorpID, string Pwd, string Mobiles, string Base64Content, string Title, string ExtCode, string SendTime) {
            object[] results = this.Invoke("BatchSendMMS", new object[] {
                        CorpID,
                        Pwd,
                        Mobiles,
                        Base64Content,
                        Title,
                        ExtCode,
                        SendTime});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void BatchSendMMSAsync(string CorpID, string Pwd, string Mobiles, string Base64Content, string Title, string ExtCode, string SendTime) {
            this.BatchSendMMSAsync(CorpID, Pwd, Mobiles, Base64Content, Title, ExtCode, SendTime, null);
        }
        
        /// <remarks/>
        public void BatchSendMMSAsync(string CorpID, string Pwd, string Mobiles, string Base64Content, string Title, string ExtCode, string SendTime, object userState) {
            if ((this.BatchSendMMSOperationCompleted == null)) {
                this.BatchSendMMSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBatchSendMMSOperationCompleted);
            }
            this.InvokeAsync("BatchSendMMS", new object[] {
                        CorpID,
                        Pwd,
                        Mobiles,
                        Base64Content,
                        Title,
                        ExtCode,
                        SendTime}, this.BatchSendMMSOperationCompleted, userState);
        }
        
        private void OnBatchSendMMSOperationCompleted(object arg) {
            if ((this.BatchSendMMSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BatchSendMMSCompleted(this, new BatchSendMMSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetReportFailMMS", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetReportFailMMS(string CorpID, string Pwd, string cell) {
            object[] results = this.Invoke("GetReportFailMMS", new object[] {
                        CorpID,
                        Pwd,
                        cell});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetReportFailMMSAsync(string CorpID, string Pwd, string cell) {
            this.GetReportFailMMSAsync(CorpID, Pwd, cell, null);
        }
        
        /// <remarks/>
        public void GetReportFailMMSAsync(string CorpID, string Pwd, string cell, object userState) {
            if ((this.GetReportFailMMSOperationCompleted == null)) {
                this.GetReportFailMMSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetReportFailMMSOperationCompleted);
            }
            this.InvokeAsync("GetReportFailMMS", new object[] {
                        CorpID,
                        Pwd,
                        cell}, this.GetReportFailMMSOperationCompleted, userState);
        }
        
        private void OnGetReportFailMMSOperationCompleted(object arg) {
            if ((this.GetReportFailMMSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetReportFailMMSCompleted(this, new GetReportFailMMSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMMS", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetMMS(string CorpID, string Pwd) {
            object[] results = this.Invoke("GetMMS", new object[] {
                        CorpID,
                        Pwd});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetMMSAsync(string CorpID, string Pwd) {
            this.GetMMSAsync(CorpID, Pwd, null);
        }
        
        /// <remarks/>
        public void GetMMSAsync(string CorpID, string Pwd, object userState) {
            if ((this.GetMMSOperationCompleted == null)) {
                this.GetMMSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMMSOperationCompleted);
            }
            this.InvokeAsync("GetMMS", new object[] {
                        CorpID,
                        Pwd}, this.GetMMSOperationCompleted, userState);
        }
        
        private void OnGetMMSOperationCompleted(object arg) {
            if ((this.GetMMSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMMSCompleted(this, new GetMMSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ChargeUpMMS", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ChargeUpMMS(string CorpID, string Pwd, string CardNo, string CardPwd) {
            object[] results = this.Invoke("ChargeUpMMS", new object[] {
                        CorpID,
                        Pwd,
                        CardNo,
                        CardPwd});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ChargeUpMMSAsync(string CorpID, string Pwd, string CardNo, string CardPwd) {
            this.ChargeUpMMSAsync(CorpID, Pwd, CardNo, CardPwd, null);
        }
        
        /// <remarks/>
        public void ChargeUpMMSAsync(string CorpID, string Pwd, string CardNo, string CardPwd, object userState) {
            if ((this.ChargeUpMMSOperationCompleted == null)) {
                this.ChargeUpMMSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChargeUpMMSOperationCompleted);
            }
            this.InvokeAsync("ChargeUpMMS", new object[] {
                        CorpID,
                        Pwd,
                        CardNo,
                        CardPwd}, this.ChargeUpMMSOperationCompleted, userState);
        }
        
        private void OnChargeUpMMSOperationCompleted(object arg) {
            if ((this.ChargeUpMMSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChargeUpMMSCompleted(this, new ChargeUpMMSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AgentMakeAccount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AgentMakeAccount(string LoginName, string LoginPwd, string CorpName, string LinkMan, string Tel, string Mobile, string Email, string Memo, string CorpID, string Pass) {
            object[] results = this.Invoke("AgentMakeAccount", new object[] {
                        LoginName,
                        LoginPwd,
                        CorpName,
                        LinkMan,
                        Tel,
                        Mobile,
                        Email,
                        Memo,
                        CorpID,
                        Pass});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AgentMakeAccountAsync(string LoginName, string LoginPwd, string CorpName, string LinkMan, string Tel, string Mobile, string Email, string Memo, string CorpID, string Pass) {
            this.AgentMakeAccountAsync(LoginName, LoginPwd, CorpName, LinkMan, Tel, Mobile, Email, Memo, CorpID, Pass, null);
        }
        
        /// <remarks/>
        public void AgentMakeAccountAsync(string LoginName, string LoginPwd, string CorpName, string LinkMan, string Tel, string Mobile, string Email, string Memo, string CorpID, string Pass, object userState) {
            if ((this.AgentMakeAccountOperationCompleted == null)) {
                this.AgentMakeAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAgentMakeAccountOperationCompleted);
            }
            this.InvokeAsync("AgentMakeAccount", new object[] {
                        LoginName,
                        LoginPwd,
                        CorpName,
                        LinkMan,
                        Tel,
                        Mobile,
                        Email,
                        Memo,
                        CorpID,
                        Pass}, this.AgentMakeAccountOperationCompleted, userState);
        }
        
        private void OnAgentMakeAccountOperationCompleted(object arg) {
            if ((this.AgentMakeAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AgentMakeAccountCompleted(this, new AgentMakeAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetReportSMS", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetReportSMS(string CorpID, string Pwd) {
            object[] results = this.Invoke("GetReportSMS", new object[] {
                        CorpID,
                        Pwd});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetReportSMSAsync(string CorpID, string Pwd) {
            this.GetReportSMSAsync(CorpID, Pwd, null);
        }
        
        /// <remarks/>
        public void GetReportSMSAsync(string CorpID, string Pwd, object userState) {
            if ((this.GetReportSMSOperationCompleted == null)) {
                this.GetReportSMSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetReportSMSOperationCompleted);
            }
            this.InvokeAsync("GetReportSMS", new object[] {
                        CorpID,
                        Pwd}, this.GetReportSMSOperationCompleted, userState);
        }
        
        private void OnGetReportSMSOperationCompleted(object arg) {
            if ((this.GetReportSMSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetReportSMSCompleted(this, new GetReportSMSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetReportMMS", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetReportMMS(string CorpID, string Pwd) {
            object[] results = this.Invoke("GetReportMMS", new object[] {
                        CorpID,
                        Pwd});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetReportMMSAsync(string CorpID, string Pwd) {
            this.GetReportMMSAsync(CorpID, Pwd, null);
        }
        
        /// <remarks/>
        public void GetReportMMSAsync(string CorpID, string Pwd, object userState) {
            if ((this.GetReportMMSOperationCompleted == null)) {
                this.GetReportMMSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetReportMMSOperationCompleted);
            }
            this.InvokeAsync("GetReportMMS", new object[] {
                        CorpID,
                        Pwd}, this.GetReportMMSOperationCompleted, userState);
        }
        
        private void OnGetReportMMSOperationCompleted(object arg) {
            if ((this.GetReportMMSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetReportMMSCompleted(this, new GetReportMMSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Send2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Send2(string CorpID, string Pwd, string Mobile, string Content, string Cell, string SendTime) {
            object[] results = this.Invoke("Send2", new object[] {
                        CorpID,
                        Pwd,
                        Mobile,
                        Content,
                        Cell,
                        SendTime});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Send2Async(string CorpID, string Pwd, string Mobile, string Content, string Cell, string SendTime) {
            this.Send2Async(CorpID, Pwd, Mobile, Content, Cell, SendTime, null);
        }
        
        /// <remarks/>
        public void Send2Async(string CorpID, string Pwd, string Mobile, string Content, string Cell, string SendTime, object userState) {
            if ((this.Send2OperationCompleted == null)) {
                this.Send2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnSend2OperationCompleted);
            }
            this.InvokeAsync("Send2", new object[] {
                        CorpID,
                        Pwd,
                        Mobile,
                        Content,
                        Cell,
                        SendTime}, this.Send2OperationCompleted, userState);
        }
        
        private void OnSend2OperationCompleted(object arg) {
            if ((this.Send2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Send2Completed(this, new Send2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendMMS2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SendMMS2(string CorpID, string Pwd, string Mobile, string Base64Content, string Title, string ExtCode, string SendTime) {
            object[] results = this.Invoke("SendMMS2", new object[] {
                        CorpID,
                        Pwd,
                        Mobile,
                        Base64Content,
                        Title,
                        ExtCode,
                        SendTime});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendMMS2Async(string CorpID, string Pwd, string Mobile, string Base64Content, string Title, string ExtCode, string SendTime) {
            this.SendMMS2Async(CorpID, Pwd, Mobile, Base64Content, Title, ExtCode, SendTime, null);
        }
        
        /// <remarks/>
        public void SendMMS2Async(string CorpID, string Pwd, string Mobile, string Base64Content, string Title, string ExtCode, string SendTime, object userState) {
            if ((this.SendMMS2OperationCompleted == null)) {
                this.SendMMS2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendMMS2OperationCompleted);
            }
            this.InvokeAsync("SendMMS2", new object[] {
                        CorpID,
                        Pwd,
                        Mobile,
                        Base64Content,
                        Title,
                        ExtCode,
                        SendTime}, this.SendMMS2OperationCompleted, userState);
        }
        
        private void OnSendMMS2OperationCompleted(object arg) {
            if ((this.SendMMS2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendMMS2Completed(this, new SendMMS2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/BatchSend2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string BatchSend2(string CorpID, string Pwd, string Mobile, string Content, string Cell, string SendTime) {
            object[] results = this.Invoke("BatchSend2", new object[] {
                        CorpID,
                        Pwd,
                        Mobile,
                        Content,
                        Cell,
                        SendTime});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void BatchSend2Async(string CorpID, string Pwd, string Mobile, string Content, string Cell, string SendTime) {
            this.BatchSend2Async(CorpID, Pwd, Mobile, Content, Cell, SendTime, null);
        }
        
        /// <remarks/>
        public void BatchSend2Async(string CorpID, string Pwd, string Mobile, string Content, string Cell, string SendTime, object userState) {
            if ((this.BatchSend2OperationCompleted == null)) {
                this.BatchSend2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnBatchSend2OperationCompleted);
            }
            this.InvokeAsync("BatchSend2", new object[] {
                        CorpID,
                        Pwd,
                        Mobile,
                        Content,
                        Cell,
                        SendTime}, this.BatchSend2OperationCompleted, userState);
        }
        
        private void OnBatchSend2OperationCompleted(object arg) {
            if ((this.BatchSend2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BatchSend2Completed(this, new BatchSend2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/BatchSendMMS2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string BatchSendMMS2(string CorpID, string Pwd, string Mobiles, string Base64Content, string Title, string ExtCode, string SendTime) {
            object[] results = this.Invoke("BatchSendMMS2", new object[] {
                        CorpID,
                        Pwd,
                        Mobiles,
                        Base64Content,
                        Title,
                        ExtCode,
                        SendTime});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void BatchSendMMS2Async(string CorpID, string Pwd, string Mobiles, string Base64Content, string Title, string ExtCode, string SendTime) {
            this.BatchSendMMS2Async(CorpID, Pwd, Mobiles, Base64Content, Title, ExtCode, SendTime, null);
        }
        
        /// <remarks/>
        public void BatchSendMMS2Async(string CorpID, string Pwd, string Mobiles, string Base64Content, string Title, string ExtCode, string SendTime, object userState) {
            if ((this.BatchSendMMS2OperationCompleted == null)) {
                this.BatchSendMMS2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnBatchSendMMS2OperationCompleted);
            }
            this.InvokeAsync("BatchSendMMS2", new object[] {
                        CorpID,
                        Pwd,
                        Mobiles,
                        Base64Content,
                        Title,
                        ExtCode,
                        SendTime}, this.BatchSendMMS2OperationCompleted, userState);
        }
        
        private void OnBatchSendMMS2OperationCompleted(object arg) {
            if ((this.BatchSendMMS2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BatchSendMMS2Completed(this, new BatchSendMMS2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void HelloWorldCompletedEventHandler(object sender, HelloWorldCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HelloWorldCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HelloWorldCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void BatchSendCompletedEventHandler(object sender, BatchSendCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BatchSendCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BatchSendCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetReportFailCompletedEventHandler(object sender, GetReportFailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetReportFailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetReportFailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void RegCompletedEventHandler(object sender, RegCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RegCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RegCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void UpdPwdCompletedEventHandler(object sender, UpdPwdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdPwdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdPwdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void UpdRegCompletedEventHandler(object sender, UpdRegCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdRegCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdRegCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void SelSumCompletedEventHandler(object sender, SelSumCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SelSumCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SelSumCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void SendCompletedEventHandler(object sender, SendCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetCompletedEventHandler(object sender, GetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void UnRegCompletedEventHandler(object sender, UnRegCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UnRegCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UnRegCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void ChargeUpCompletedEventHandler(object sender, ChargeUpCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChargeUpCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ChargeUpCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void AgentChangeAccountCompletedEventHandler(object sender, AgentChangeAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AgentChangeAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AgentChangeAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void BalanceMMSCompletedEventHandler(object sender, BalanceMMSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BalanceMMSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BalanceMMSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void SendMMSCompletedEventHandler(object sender, SendMMSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendMMSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendMMSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void BatchSendMMSCompletedEventHandler(object sender, BatchSendMMSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BatchSendMMSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BatchSendMMSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetReportFailMMSCompletedEventHandler(object sender, GetReportFailMMSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetReportFailMMSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetReportFailMMSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetMMSCompletedEventHandler(object sender, GetMMSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMMSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMMSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void ChargeUpMMSCompletedEventHandler(object sender, ChargeUpMMSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChargeUpMMSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ChargeUpMMSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void AgentMakeAccountCompletedEventHandler(object sender, AgentMakeAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AgentMakeAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AgentMakeAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetReportSMSCompletedEventHandler(object sender, GetReportSMSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetReportSMSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetReportSMSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetReportMMSCompletedEventHandler(object sender, GetReportMMSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetReportMMSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetReportMMSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void Send2CompletedEventHandler(object sender, Send2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Send2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Send2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void SendMMS2CompletedEventHandler(object sender, SendMMS2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendMMS2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendMMS2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void BatchSend2CompletedEventHandler(object sender, BatchSend2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BatchSend2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BatchSend2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void BatchSendMMS2CompletedEventHandler(object sender, BatchSendMMS2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BatchSendMMS2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BatchSendMMS2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591